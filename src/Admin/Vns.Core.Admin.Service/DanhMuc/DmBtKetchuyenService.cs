/*
insert license info here
*/
using System.Collections;
using System.ComponentModel;
using System.Data;
using System;
using Vns.Erp.Core.Admin.Domain;
using Vns.Erp.Core.Admin.Dao;
using Vns.Erp.Core.Admin.Service.Interface;
using Vns.Erp.Core.Service;
using Vns.Erp.Core.Service.Interface;
using Vns.Erp.Core;
using System.Collections.Generic;
using System.ServiceModel.Activation;

namespace Vns.Erp.Core.Admin.Service
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
    /// </summary>	
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    public class DmBtKetchuyenService : GenericService<DmBtKetchuyen, Guid>, IDmBtKetchuyenService
    {
        public IDmBtKetchuyenDao DmBtKetchuyenDao
        {
            get { return (IDmBtKetchuyenDao)Dao; }
            set { Dao = value; }
        }
        public IList<DmBtKetchuyen> GetObjectAllByDonviID(Guid DonviId)
        {
            ArrayList props = new ArrayList();
            ArrayList values = new ArrayList();
            props.Add("DonviId");
            values.Add(DonviId);

            IList<Vns.Erp.Core.Domain.VnsOrder> lst = new List<Vns.Erp.Core.Domain.VnsOrder>();
            lst.Add(new Vns.Erp.Core.Domain.VnsOrder(true, "ThuTu"));
            return List(-1, -1, props, values, lst);
        }

        private String GenSQLLaySoDuTaiKhoan(DateTime Tu_ngay, DateTime Den_ngay, Guid Donvi_ID, string LoaiTaiKhoan, DmBtKetchuyen _obj_dm_bt_ketchuyen, ref List<String> lstColumns, ref List<String> lsttypes)
        {
            string _sql_select = "SELECT SUM(SoTien) as SoTien ";
            lstColumns = new List<string>();
            lsttypes = new List<string>();
            lstColumns.Add("SoTien");
            lsttypes.Add("System.Decimal");
            string _sql_from = " From BcKetoan ";
            string _sql_groupby = " Group by";
            string _sql_where = " WHERE ";
            //_sql_where = _sql_where + String.Format(" TRUNC(NGAY_CT) >= TO_DATE('{0}/{1}/{2}', 'yyyy/mm/dd')", Tu_ngay.Year, Tu_ngay.Month, Tu_ngay.Day)
            _sql_where = _sql_where + string.Format(" NgayCt >= :TuNgay");
            _sql_where = _sql_where + string.Format(" AND NgayCt <= :DenNgay");
            _sql_where = _sql_where + string.Format(" AND DonviId = :DonviId");
            string _loai_tk = LoaiTaiKhoan;
            var _with1 = _obj_dm_bt_ketchuyen;
            _sql_where = _sql_where + " AND MaTk" + _loai_tk + " like '" + _with1.MaTkNo + "%'";

            if (_loai_tk == "Co")
            {
                _sql_select = _sql_select + string.Format(", TkCoId");
                _sql_groupby = _sql_groupby + ", TkCoId ";
                lstColumns.Add("TkCoId");
                lsttypes.Add("System.Guid");
            }
            else
            {
                _sql_select = _sql_select + string.Format(", TkNoId");
                _sql_groupby = _sql_groupby + ", TkNoId ";
                lstColumns.Add("TkNoId");
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcCongtrinh == 1))
            {
                //_sql_select = "AND "
            }

            if ((_with1.KcHopdong == 1))
            {
                _sql_select = _sql_select + string.Format(", IdHopdong{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdHopdong" + _loai_tk;
                lstColumns.Add(string.Format("IdHopdong{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcKh == 1))
            {
                _sql_select = _sql_select + string.Format(", IdKhang{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdKhang" + _loai_tk;
                lstColumns.Add(string.Format("IdKhang{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcPhi == 1))
            {
                _sql_select = _sql_select + string.Format(", IdDmKhoanphi{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdDmKhoanphi" + _loai_tk;
                lstColumns.Add(string.Format("IdDmKhoanphi{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcTudo1 == 1))
            {
                _sql_select = _sql_select + string.Format(", IdDmTudo1{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdDmTudo1" + _loai_tk;
                lstColumns.Add(string.Format("IdDmTudo1{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcTudo2 == 1))
            {
                _sql_select = _sql_select + string.Format(", IdDmTudo2{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdDmTudo2" + _loai_tk;
                lstColumns.Add(string.Format("IdDmTudo2{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcTudo3 == 1))
            {
                _sql_select = _sql_select + string.Format(", IdDmTudo3{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdDmTudo3" + _loai_tk;
                lstColumns.Add(string.Format("IdDmTudo3{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcTudo4 == 1))
            {
                _sql_select = _sql_select + string.Format(", IdDmTudo4{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdDmTudo4" + _loai_tk;
                lstColumns.Add(string.Format("IdDmTudo4{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcTudo5 == 1))
            {
                _sql_select = _sql_select + string.Format(", IdDmTudo5{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdDmTudo5" + _loai_tk;
                lstColumns.Add(string.Format("IdDmTudo5{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }

            if ((_with1.KcVuviec == 1))
            {
                _sql_select = _sql_select + string.Format(", IdVuviec{0}", _loai_tk);
                _sql_groupby = _sql_groupby + ", IdVuviec" + _loai_tk;
                lstColumns.Add(string.Format("IdVuviec{0}", _loai_tk));
                lsttypes.Add("System.Guid");
            }
            _sql_groupby = _sql_groupby.Replace("Group by,", "Group by");
            if ((_sql_groupby == " Group by"))
            {
                _sql_groupby = "";
            }
            _sql_select = _sql_select + _sql_from + _sql_where + _sql_groupby;
            return _sql_select;
        }
        public DataTable LaySoDuTaiKhoan(DateTime Tu_ngay, DateTime Den_ngay, Guid Donvi_id, DmBtKetchuyen _obj_dm_bt_ketchuyen)
        {
            DataTable DtNo = new DataTable();
            IList lstNo;
            DataTable DtCo = new DataTable();
            IList lstCo;
            DataSet ds = new DataSet();
            List<String> lstPro = new List<string>();
            lstPro.Add("TuNgay");
            lstPro.Add("DenNgay");
            lstPro.Add("DonviId");

            List<Object> lstvalue = new List<object>();
            lstvalue.Add(VnsConvert.CStartOfDate(Tu_ngay));
            lstvalue.Add(VnsConvert.CEndOfDate(Den_ngay));
            lstvalue.Add(Donvi_id);
            List<String> lstNocol = new List<string>();
            List<String> lstNoType = new List<string>();
            List<String> lstCocol = new List<string>();
            List<String> lstCoType = new List<string>();
            switch (_obj_dm_bt_ketchuyen.LoaiKetchuyen.ToString())
            {
                case "1":
                    lstNo = DmBtKetchuyenDao.GetByQuery(GenSQLLaySoDuTaiKhoan(Tu_ngay, Den_ngay, Donvi_id, "Co", _obj_dm_bt_ketchuyen, ref lstNocol, ref lstNoType), lstPro, lstvalue);
                    DtNo = Vns.Erp.Core.DataHelper.ToDataTable(lstNocol, lstNo, lstNoType);
                    lstCo = DmBtKetchuyenDao.GetByQuery(GenSQLLaySoDuTaiKhoan(Tu_ngay, Den_ngay, Donvi_id, "No", _obj_dm_bt_ketchuyen, ref lstCocol, ref lstCoType), lstPro, lstvalue);
                    DtCo = Vns.Erp.Core.DataHelper.ToDataTable(lstCocol, lstCo, lstCoType);
                    break;
                default:
                    lstCo = DmBtKetchuyenDao.GetByQuery(GenSQLLaySoDuTaiKhoan(Tu_ngay, Den_ngay, Donvi_id, "Co", _obj_dm_bt_ketchuyen, ref lstCocol, ref lstCoType), lstPro, lstvalue);
                    DtCo = Vns.Erp.Core.DataHelper.ToDataTable(lstCocol, lstCo, lstCoType);
                    lstNo = DmBtKetchuyenDao.GetByQuery(GenSQLLaySoDuTaiKhoan(Tu_ngay, Den_ngay, Donvi_id, "No", _obj_dm_bt_ketchuyen, ref lstNocol, ref lstNoType), lstPro, lstvalue);
                    DtNo = Vns.Erp.Core.DataHelper.ToDataTable(lstNocol, lstNo, lstNoType);
                    break;
            }
            //if (_obj_dm_bt_ketchuyen.LoaiKetchuyen == 1)
            //{
            //}
            //else
            //{
            //}

            ds.Tables.Add(DtNo.Copy());
            ds.Tables[0].Rows.Clear();
            List<int> lstDel = new List<int>();
            int i = 0;
            int j = 0;
            int k = 0;
            if ((DtNo.Rows.Count > 0 & DtCo.Rows.Count > 0))
            {
                for (i = DtNo.Rows.Count - 1; i >= 0; i += -1)
                {

                    for (j = DtCo.Rows.Count - 1; j >= 0; j += -1)
                    {
                        //Kiem tra du lieu hop le
                        bool check = true;
                        //Nghialm: sua integer = 1
                        for (k = 1; k <= DtNo.Columns.Count - 1; k++)
                        {
                            if ((object.ReferenceEquals(DtNo.Rows[i][k], DBNull.Value)))
                            {
                                DtNo.Rows[i][k] = Null.NullGuid;
                            }

                            if ((object.ReferenceEquals(DtCo.Rows[j][k], DBNull.Value)))
                            {
                                DtCo.Rows[j][k] = Null.NullGuid;
                            }

                            if (VnsConvert.CGuid(DtNo.Rows[i][k].ToString()) != VnsConvert.CGuid(DtCo.Rows[j][k].ToString()))
                            {
                                check = false;
                                break; // TODO: might not be correct. Was : Exit For
                            }
                        }
                        //Tinh so du
                        if ((check))
                        {
                            DataRow rows = ds.Tables[0].NewRow();
                            if ((object.ReferenceEquals(DtNo.Rows[i][0], DBNull.Value)))
                            {
                                DtNo.Rows[i][0] = 0;
                            }

                            if ((object.ReferenceEquals(DtCo.Rows[j][0], DBNull.Value)))
                            {
                                DtCo.Rows[j][0] = 0;
                            }

                            rows[0] = Decimal.Parse(DtNo.Rows[i][0].ToString()) - Decimal.Parse(DtCo.Rows[j][0].ToString());
                            for (int h = 1; h <= DtNo.Columns.Count - 1; h++)
                            {
                                rows[h] = DtNo.Rows[i][h];
                            }
                            ds.Tables[0].Rows.Add(rows);
                            //Xac dinh vi tri bi xoa tren DtCo
                            DtCo.Rows[j][1] = Null.NullGuid;
                            //Xac dinh vi tri bi xoa tren DtNo 
                            lstDel.Add(i);
                            //lstDel.Add(j)
                        }
                    }
                }
            }
            //Xoa dong da tinh tren DtNo, do for tu cuoi datatable nen co the remove theo thu tu ghi vao lstDel
            //Step 2
            for (i = 0; i <= lstDel.Count - 1; i++)
            {
                DtNo.Rows.RemoveAt(lstDel[i]);
            }
            //For j As Integer = 1 To lstDel.Count - 1 Step 2
            //    DtCo.Rows.RemoveAt(lstDel(j))
            //Next
            //Xoa dong da tinh tren DtCo, cac dong nay da duoc gan gia tri bang 0 o column 1
            for (j = DtCo.Rows.Count - 1; j >= 0; j += -1)
            {
                if (VnsCheck.IsNullGuid(DtCo.Rows[j][1].ToString()))
                {
                    DtCo.Rows.RemoveAt(j);
                }
            }
            //Add cac dong chua tinh tren DtNo vao table
            DataRow RowData = null;
            for (i = 0; i <= DtNo.Rows.Count - 1; i++)
            {
                RowData = ds.Tables[0].NewRow();
                var _with1 = RowData;
                for (j = 0; j <= DtNo.Columns.Count - 1; j++)
                {
                    _with1[j] = DtNo.Rows[i][j];
                }
                ds.Tables[0].Rows.Add(RowData);
                //ds.Tables(0).Rows.Add(DtCo.Rows(i))    
            }
            //Add cac dong chua tinh tren DtCo vao table
            for (i = 0; i <= DtCo.Rows.Count - 1; i++)
            {
                DtCo.Rows[i][0] = -Decimal.Parse(DtCo.Rows[i][0].ToString());
                RowData = ds.Tables[0].NewRow();
                var _with2 = RowData;
                for (j = 0; j <= DtCo.Columns.Count - 1; j++)
                {
                    _with2[j] = DtCo.Rows[i][j];
                }
                ds.Tables[0].Rows.Add(RowData);
                //ds.Tables(0).Rows.Add(DtNo.Rows(j))
            }

            return ds.Tables[0];
        }
    }
}
