/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.Erp.Core.Admin.Domain;
using Vns.Erp.Core.Admin.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
namespace Vns.Erp.Core.Admin.Dao.NHibernate
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
	/// </summary>
    [Serializable]
    public sealed class DmNguonTscdDao : GenericDao<DmNguonTscd, Guid>, IDmNguonTscdDao
    {
        public IList<DmNguonTscd> GetByMaNguon(string MaDmNguonTscd, Guid DonviId)
        {
            string sql = "from DmNguonTscd a where a.MaDmNguonTscd like (:MaDmNguonTscd) and a.DonviId =(:DonviId)";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("MaDmNguonTscd", MaDmNguonTscd);
            q.SetParameter("DonviId", DonviId);
            return q.List<DmNguonTscd>();
        }
        public IList<DmNguonTscd> GetAllByDonviID(Guid DonviId)
        {
            string sql = "from DmNguonTscd a where a.DonviId =(:DonviId)";
            IQuery q = NHibernateSession.CreateQuery(sql);            
            q.SetParameter("DonviId", DonviId);
            return q.List<DmNguonTscd>();
        }
        
    }
}
