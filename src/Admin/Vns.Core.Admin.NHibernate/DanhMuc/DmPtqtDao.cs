/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.Erp.Core.Admin.Domain;
using Vns.Erp.Core.Admin.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
namespace Vns.Erp.Core.Admin.Dao.NHibernate
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
	/// </summary>
	[Serializable]
	public sealed class DmPtqtDao:GenericDao<DmPtqt,Guid>,IDmPtqtDao
	{
        #region IDao
        DmPtqt IDao<DmPtqt, Guid>.Merge(DmPtqt entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.Merge(entity);

            return entity;
        }

        DmPtqt IDao<DmPtqt, Guid>.Save(DmPtqt entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.Save(entity);

            return entity;
        }

        DmPtqt IDao<DmPtqt, Guid>.SaveOrUpdate(DmPtqt entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.SaveOrUpdate(entity);

            return entity;
        }
        #endregion

        public IList<DmPtqt> GetAllByDonviID(Guid DONVI_ID)
        {
            ArrayList props = new ArrayList();
            ArrayList values = new ArrayList();
            props.Add("DonviId");
            values.Add(DONVI_ID);
            return List(-1, -1, props, values, null);
        }

        public IList<DmPtqt> GetByKyHieu(String KyHieu, Guid DonviId)
        {
            string sql = "from DmPtqt a where (a.KyHieu like :KyHieu) and (a.DonviId=:DonviId)";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("KyHieu",KyHieu);
            q.SetParameter("DonviId",DonviId);
            return q.List<DmPtqt>();
        }
	}
}
