/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.Erp.Core.Admin.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
	/// </summary>

	
	[Serializable]
    [DataContract(Namespace = "http://Vns.Erp.Core.Admin", IsReference = true)]
	public partial class DmKhang : DomainObject<Guid>, INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }		
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private Guid _khang_id; 
		private string _ma_khang; 
		private string _ky_hieu; 
		private string _ten_khang; 
		private string _ma_so_thue; 
		private string _dia_chi; 
		private string _tel; 
		private string _fax; 
		private string _so_taikhoan; 
		private string _ten_loaikhang; 
		private Guid _khang_id_cha; 
		private decimal _chi_tiet; 
		private Guid _donvi_id; 
		private string _ma_donvi; 
		private decimal _cho_phep_sua; 
		private decimal _co_su_dung; 
		private string _matk_lienquan; 
		private decimal _cap; 
		private decimal _loai_khang; 
		private Guid _nhom_khang_1; 
		private Guid _nhom_khang_2; 
		private Guid _nhom_khang_3;
        private Guid _nguoi_tao; 
		private DateTime _ngay_tao;
        private Guid _nguoi_sua; 
		private DateTime _ngay_sua; 
		private string _nguoi_dai_dien; 
		private string _cmtnd; 
		private string _email; 
		private decimal _theo_doi_cn; 
		private string _website;
        private DateTime _ngay_sinh;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DmKhang()
		{
				_khang_id =  new Guid(); 
				_ma_khang =  String.Empty; 
				_ky_hieu =  String.Empty; 
				_ten_khang =  String.Empty; 
				_ma_so_thue =  String.Empty; 
				_dia_chi =  String.Empty; 
				_tel =  String.Empty; 
				_fax =  String.Empty; 
				_so_taikhoan =  String.Empty; 
				_ten_loaikhang =  String.Empty; 
				_khang_id_cha =  new Guid(); 
				_chi_tiet = 0; 
				_donvi_id =  new Guid(); 
				_ma_donvi =  String.Empty; 
				_cho_phep_sua = 0; 
				_co_su_dung = 0; 
				_matk_lienquan =  String.Empty; 
				_cap = 0; 
				_loai_khang = 0; 
				_nhom_khang_1 =  new Guid(); 
				_nhom_khang_2 =  new Guid(); 
				_nhom_khang_3 =  new Guid();
                _nguoi_tao = Guid.Empty ; 
				_ngay_tao = DateTime.MaxValue;
                _nguoi_sua = Guid.Empty ; 
				_ngay_sua = DateTime.MaxValue; 
				_nguoi_dai_dien =  String.Empty; 
				_cmtnd =  String.Empty; 
				_email =  String.Empty; 
				_theo_doi_cn = 0; 
				_website =  String.Empty;
                _ngay_sinh = DateTime.MaxValue;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid KhangId
		{
			get { return _khang_id; }
			set { _isChanged |= (_khang_id != value); _khang_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaKhang
		{
			get { return _ma_khang; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for MaKhang", value, value.ToString());
				
				_isChanged |= (_ma_khang != value); _ma_khang = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string KyHieu
		{
			get { return _ky_hieu; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for KyHieu", value, value.ToString());
				
				_isChanged |= (_ky_hieu != value); _ky_hieu = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenKhang
		{
			get { return _ten_khang; }
			set	
			{
				if ( value != null)
					if( value.Length > 256)
						throw new ArgumentOutOfRangeException("Invalid value for TenKhang", value, value.ToString());
				
				_isChanged |= (_ten_khang != value); _ten_khang = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaSoThue
		{
			get { return _ma_so_thue; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for MaSoThue", value, value.ToString());
				
				_isChanged |= (_ma_so_thue != value); _ma_so_thue = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string DiaChi
		{
			get { return _dia_chi; }
			set	
			{
				if ( value != null)
					if( value.Length > 256)
						throw new ArgumentOutOfRangeException("Invalid value for DiaChi", value, value.ToString());
				
				_isChanged |= (_dia_chi != value); _dia_chi = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Tel
		{
			get { return _tel; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for Tel", value, value.ToString());
				
				_isChanged |= (_tel != value); _tel = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Fax
		{
			get { return _fax; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for Fax", value, value.ToString());
				
				_isChanged |= (_fax != value); _fax = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string SoTaikhoan
		{
			get { return _so_taikhoan; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for SoTaikhoan", value, value.ToString());
				
				_isChanged |= (_so_taikhoan != value); _so_taikhoan = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenLoaikhang
		{
			get { return _ten_loaikhang; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for TenLoaikhang", value, value.ToString());
				
				_isChanged |= (_ten_loaikhang != value); _ten_loaikhang = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid KhangIdCha
		{
			get { return _khang_id_cha; }
			set { _isChanged |= (_khang_id_cha != value); _khang_id_cha = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal ChiTiet
		{
			get { return _chi_tiet; }
			set { _isChanged |= (_chi_tiet != value); _chi_tiet = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid DonviId
		{
			get { return _donvi_id; }
			set { _isChanged |= (_donvi_id != value); _donvi_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaDonvi
		{
			get { return _ma_donvi; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for MaDonvi", value, value.ToString());
				
				_isChanged |= (_ma_donvi != value); _ma_donvi = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal ChoPhepSua
		{
			get { return _cho_phep_sua; }
			set { _isChanged |= (_cho_phep_sua != value); _cho_phep_sua = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal CoSuDung
		{
			get { return _co_su_dung; }
			set { _isChanged |= (_co_su_dung != value); _co_su_dung = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MatkLienquan
		{
			get { return _matk_lienquan; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for MatkLienquan", value, value.ToString());
				
				_isChanged |= (_matk_lienquan != value); _matk_lienquan = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal Cap
		{
			get { return _cap; }
			set { _isChanged |= (_cap != value); _cap = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal LoaiKhang
		{
			get { return _loai_khang; }
			set { _isChanged |= (_loai_khang != value); _loai_khang = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid NhomKhang1
		{
			get { return _nhom_khang_1; }
			set { _isChanged |= (_nhom_khang_1 != value); _nhom_khang_1 = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid NhomKhang2
		{
			get { return _nhom_khang_2; }
			set { _isChanged |= (_nhom_khang_2 != value); _nhom_khang_2 = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid NhomKhang3
		{
			get { return _nhom_khang_3; }
			set { _isChanged |= (_nhom_khang_3 != value); _nhom_khang_3 = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
        public Guid NguoiTao
		{
			get { return _nguoi_tao; }
			set { _isChanged |= (_nguoi_tao != value); _nguoi_tao = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  DateTime NgayTao
		{
			get { return _ngay_tao; }
			set { _isChanged |= (_ngay_tao != value); _ngay_tao = value; }
			}


        [DataMember]
        public DateTime NgaySinh
        {
            get { return _ngay_sinh; }
            set { _isChanged |= (_ngay_sinh != value); _ngay_sinh = value; }
        }
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
        public Guid NguoiSua
		{
			get { return _nguoi_sua; }
			set { _isChanged |= (_nguoi_sua != value); _nguoi_sua = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  DateTime NgaySua
		{
			get { return _ngay_sua; }
			set { _isChanged |= (_ngay_sua != value); _ngay_sua = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string NguoiDaiDien
		{
			get { return _nguoi_dai_dien; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for NguoiDaiDien", value, value.ToString());
				
				_isChanged |= (_nguoi_dai_dien != value); _nguoi_dai_dien = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Cmtnd
		{
			get { return _cmtnd; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for Cmtnd", value, value.ToString());
				
				_isChanged |= (_cmtnd != value); _cmtnd = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Email
		{
			get { return _email; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for Email", value, value.ToString());
				
				_isChanged |= (_email != value); _email = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal TheoDoiCn
		{
			get { return _theo_doi_cn; }
			set { _isChanged |= (_theo_doi_cn != value); _theo_doi_cn = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Website
		{
			get { return _website; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for Website", value, value.ToString());
				
				_isChanged |= (_website != value); _website = value;
			}
			}
			
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		
		#endregion
		
		
		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			DmKhang castObj = (DmKhang)obj; 
			return castObj.GetHashCode() == this.GetHashCode();
		}		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			return this.GetType().FullName.GetHashCode();				
		}
		#endregion		
	}
}
