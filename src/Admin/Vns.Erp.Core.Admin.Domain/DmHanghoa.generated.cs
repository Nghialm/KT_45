/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.Erp.Core.Admin.Domain
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
    /// </summary>


    [Serializable]
    [DataContract(Namespace = "http://Vns.Erp.Core.Admin", IsReference = true)]
    public partial class DmHanghoa : DomainObject<Guid>, INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private Guid _hanghoa_id;
        private string _ma_hanghoa;
        private string _ky_hieu;
        private string _ten_hanghoa;
        private Guid _hanghoa_id_cha;
        private decimal _chi_tiet;
        private string _nuoc_sanxuat;
        private decimal _nam_sanxuat;
        private Guid _donvi_id;
        private string _ma_donvi;
        private Guid _dvt_id;
        private string _ma_dvt;
        private string _ten_dvt;
        private string _ten_pp_htk;
        private string _md_tk_kho;
        private decimal _cho_phep_sua;
        private decimal _co_su_dung;
        private Guid _id_nhom_vt_1;
        private Guid _id_nhom_vt_2;
        private Guid _id_nhom_vt_3;
        private decimal _cap;
        private decimal _pp_kt_htk;
        private string _md_tk_giavon;
        private string _md_tk_giaban;
        private string _md_tk_giaban_nb;
        private string _md_tk_hb_tralai;
        private string _md_tk_sp_dd;
        private Guid _nguoi_tao;
        private DateTime _ngay_tao;
        private Guid _nguoi_sua;
        private DateTime _ngay_sua;
        private string _vi_tri;
        private decimal _than_vo;
        private decimal _LoaiHangHoa = 0;
        private DateTime _SynDate;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public DmHanghoa()
        {
            _hanghoa_id = new Guid();
            _ma_hanghoa = String.Empty;
            _ky_hieu = String.Empty;
            _ten_hanghoa = String.Empty;
            _hanghoa_id_cha = new Guid();
            _chi_tiet = 0;
            _nuoc_sanxuat = String.Empty;
            _nam_sanxuat = 0;
            _donvi_id = new Guid();
            _ma_donvi = String.Empty;
            _dvt_id = new Guid();
            _ma_dvt = String.Empty;
            _ten_dvt = String.Empty;
            _ten_pp_htk = String.Empty;
            _md_tk_kho = String.Empty;
            _cho_phep_sua = 0;
            _co_su_dung = 0;
            _id_nhom_vt_1 = new Guid();
            _id_nhom_vt_2 = new Guid();
            _id_nhom_vt_3 = new Guid();
            _cap = 0;
            _pp_kt_htk = 0;
            _md_tk_giavon = String.Empty;
            _md_tk_giaban = String.Empty;
            _md_tk_giaban_nb = String.Empty;
            _md_tk_hb_tralai = String.Empty;
            _md_tk_sp_dd = String.Empty;
            _nguoi_tao = Guid.Empty;
            _ngay_tao = DateTime.MaxValue;
            _nguoi_sua = Guid.Empty;
            _ngay_sua = DateTime.MaxValue;
            _vi_tri = String.Empty;
            _than_vo = 0;
            _SynDate = Null.MIN_DATE;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid HanghoaId
        {
            get { return _hanghoa_id; }
            set { _isChanged |= (_hanghoa_id != value); _hanghoa_id = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MaHanghoa
        {
            get { return _ma_hanghoa; }
            set
            {
                if (value != null)
                    if (value.Length > 64)
                        throw new ArgumentOutOfRangeException("Invalid value for MaHanghoa", value, value.ToString());

                _isChanged |= (_ma_hanghoa != value); _ma_hanghoa = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string KyHieu
        {
            get { return _ky_hieu; }
            set
            {
                if (value != null)
                    if (value.Length > 64)
                        throw new ArgumentOutOfRangeException("Invalid value for KyHieu", value, value.ToString());

                _isChanged |= (_ky_hieu != value); _ky_hieu = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string TenHanghoa
        {
            get { return _ten_hanghoa; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for TenHanghoa", value, value.ToString());

                _isChanged |= (_ten_hanghoa != value); _ten_hanghoa = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid HanghoaIdCha
        {
            get { return _hanghoa_id_cha; }
            set { _isChanged |= (_hanghoa_id_cha != value); _hanghoa_id_cha = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal ChiTiet
        {
            get { return _chi_tiet; }
            set { _isChanged |= (_chi_tiet != value); _chi_tiet = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string NuocSanxuat
        {
            get { return _nuoc_sanxuat; }
            set
            {
                if (value != null)
                    if (value.Length > 64)
                        throw new ArgumentOutOfRangeException("Invalid value for NuocSanxuat", value, value.ToString());

                _isChanged |= (_nuoc_sanxuat != value); _nuoc_sanxuat = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal NamSanxuat
        {
            get { return _nam_sanxuat; }
            set { _isChanged |= (_nam_sanxuat != value); _nam_sanxuat = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid DonviId
        {
            get { return _donvi_id; }
            set { _isChanged |= (_donvi_id != value); _donvi_id = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MaDonvi
        {
            get { return _ma_donvi; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MaDonvi", value, value.ToString());

                _isChanged |= (_ma_donvi != value); _ma_donvi = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid DvtId
        {
            get { return _dvt_id; }
            set { _isChanged |= (_dvt_id != value); _dvt_id = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MaDvt
        {
            get { return _ma_dvt; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MaDvt", value, value.ToString());

                _isChanged |= (_ma_dvt != value); _ma_dvt = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string TenDvt
        {
            get { return _ten_dvt; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for TenDvt", value, value.ToString());

                _isChanged |= (_ten_dvt != value); _ten_dvt = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string TenPpHtk
        {
            get { return _ten_pp_htk; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for TenPpHtk", value, value.ToString());

                _isChanged |= (_ten_pp_htk != value); _ten_pp_htk = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MdTkKho
        {
            get { return _md_tk_kho; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MdTkKho", value, value.ToString());

                _isChanged |= (_md_tk_kho != value); _md_tk_kho = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal ChoPhepSua
        {
            get { return _cho_phep_sua; }
            set { _isChanged |= (_cho_phep_sua != value); _cho_phep_sua = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal CoSuDung
        {
            get { return _co_su_dung; }
            set { _isChanged |= (_co_su_dung != value); _co_su_dung = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid IdNhomVt1
        {
            get { return _id_nhom_vt_1; }
            set { _isChanged |= (_id_nhom_vt_1 != value); _id_nhom_vt_1 = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid IdNhomVt2
        {
            get { return _id_nhom_vt_2; }
            set { _isChanged |= (_id_nhom_vt_2 != value); _id_nhom_vt_2 = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid IdNhomVt3
        {
            get { return _id_nhom_vt_3; }
            set { _isChanged |= (_id_nhom_vt_3 != value); _id_nhom_vt_3 = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal Cap
        {
            get { return _cap; }
            set { _isChanged |= (_cap != value); _cap = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal PpKtHtk
        {
            get { return _pp_kt_htk; }
            set { _isChanged |= (_pp_kt_htk != value); _pp_kt_htk = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MdTkGiavon
        {
            get { return _md_tk_giavon; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MdTkGiavon", value, value.ToString());

                _isChanged |= (_md_tk_giavon != value); _md_tk_giavon = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MdTkGiaban
        {
            get { return _md_tk_giaban; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MdTkGiaban", value, value.ToString());

                _isChanged |= (_md_tk_giaban != value); _md_tk_giaban = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MdTkGiabanNb
        {
            get { return _md_tk_giaban_nb; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MdTkGiabanNb", value, value.ToString());

                _isChanged |= (_md_tk_giaban_nb != value); _md_tk_giaban_nb = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MdTkHbTralai
        {
            get { return _md_tk_hb_tralai; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MdTkHbTralai", value, value.ToString());

                _isChanged |= (_md_tk_hb_tralai != value); _md_tk_hb_tralai = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string MdTkSpDd
        {
            get { return _md_tk_sp_dd; }
            set
            {
                if (value != null)
                    if (value.Length > 32)
                        throw new ArgumentOutOfRangeException("Invalid value for MdTkSpDd", value, value.ToString());

                _isChanged |= (_md_tk_sp_dd != value); _md_tk_sp_dd = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid NguoiTao
        {
            get { return _nguoi_tao; }
            set { _isChanged |= (_nguoi_tao != value); _nguoi_tao = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public DateTime NgayTao
        {
            get { return _ngay_tao; }
            set { _isChanged |= (_ngay_tao != value); _ngay_tao = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid NguoiSua
        {
            get { return _nguoi_sua; }
            set { _isChanged |= (_nguoi_sua != value); _nguoi_sua = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public DateTime NgaySua
        {
            get { return _ngay_sua; }
            set { _isChanged |= (_ngay_sua != value); _ngay_sua = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string ViTri
        {
            get { return _vi_tri; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for ViTri", value, value.ToString());

                _isChanged |= (_vi_tri != value); _vi_tri = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal ThanVo
        {
            get { return _than_vo; }
            set { _isChanged |= (_than_vo != value); _than_vo = value; }
        }

        [DataMember]
        public decimal LoaiHangHoa
        {
            get { return _LoaiHangHoa; }
            set { _isChanged |= (_LoaiHangHoa != value); _LoaiHangHoa = value; }
        }

        [DataMember]
        public DateTime SynDate
        {
            get { return _SynDate; }
            set { _isChanged |= (_SynDate != value); _SynDate = value; }
        }


        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
        {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsDeleted
        {
            get { return _isDeleted; }
        }

        #endregion


        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public void MarkAsDeleted()
        {
            _isDeleted = true;
            _isChanged = true;
        }


        #endregion


        #region Equals And HashCode Overrides
        /// <summary>
        /// local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj)
        {
            if (this == obj) return true;
            if ((obj == null) || (obj.GetType() != this.GetType())) return false;
            DmHanghoa castObj = (DmHanghoa)obj;
            return (castObj != null) &&
                (this._hanghoa_id == castObj.HanghoaId);
        }

        /// <summary>
        /// local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode()
        {

            int hash = 57;
            hash = 27 * hash * _hanghoa_id.GetHashCode();
            return hash;
        }
        #endregion

    }
}
