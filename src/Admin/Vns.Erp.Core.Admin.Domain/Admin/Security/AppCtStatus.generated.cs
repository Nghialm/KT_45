/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.Erp.Core.Admin.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
	/// </summary>

	
	[Serializable]
	[DataContract(Namespace ="http://Vns.Erp.Core.Admin",IsReference=true)]
	public partial class AppCtStatus : DomainObject<Guid>, INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }		
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private Guid _id; 
		private Guid _donvi_id;
        private Guid _group_id; 
		private Guid _loai_ct_id; 
		private string _ds_status; 
		private string _mo_ta; 
		private string _mo_ta_1; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public AppCtStatus()
		{
				_id =  new Guid(); 
				_donvi_id =  new Guid(); 
				_group_id =new Guid() ; 
				_loai_ct_id =  new Guid(); 
				_ds_status =  String.Empty; 
				_mo_ta =  String.Empty; 
				_mo_ta_1 =  String.Empty; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid DonviId
		{
			get { return _donvi_id; }
			set { _isChanged |= (_donvi_id != value); _donvi_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
        public Guid GroupId
		{
			get { return _group_id; }
			set { _isChanged |= (_group_id != value); _group_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid LoaiCtId
		{
			get { return _loai_ct_id; }
			set { _isChanged |= (_loai_ct_id != value); _loai_ct_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string DsStatus
		{
			get { return _ds_status; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for DsStatus", value, value.ToString());
				
				_isChanged |= (_ds_status != value); _ds_status = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MoTa
		{
			get { return _mo_ta; }
			set	
			{
				if ( value != null)
					if( value.Length > 512)
						throw new ArgumentOutOfRangeException("Invalid value for MoTa", value, value.ToString());
				
				_isChanged |= (_mo_ta != value); _mo_ta = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MoTa1
		{
			get { return _mo_ta_1; }
			set	
			{
				if ( value != null)
					if( value.Length > 512)
						throw new ArgumentOutOfRangeException("Invalid value for MoTa1", value, value.ToString());
				
				_isChanged |= (_mo_ta_1 != value); _mo_ta_1 = value;
			}
			}
			
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		
		#endregion
		
		
		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			AppCtStatus castObj = (AppCtStatus)obj; 
			return ( castObj != null ) &&
				( this._id == castObj.Id);
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _id.GetHashCode();
			return hash; 
		}
		#endregion
		
	}
}
