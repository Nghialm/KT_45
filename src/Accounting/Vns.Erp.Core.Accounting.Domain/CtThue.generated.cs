/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.Erp.Core.Accounting.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
	/// </summary>

	
	[Serializable]
	[DataContract(Namespace ="http://Vns.Erp.Core.Accounting.Domain",IsReference=true)]
	public partial class CtThue : DomainObject<Guid>, INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }		
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private Guid _ct_thue_id; 
		private string _loai_taikhoan; 
		private Guid _taikhoan_id; 
		private string _ma_taikhoan; 
		private Guid _ctd_id; 
		private string _ky_hieu_hd; 
		private string _so_seri; 
		private DateTime? _ngay_hoadon; 
		private Guid _khang_id; 
		private string _ten_khang; 
		private string _mst; 
		private Guid _hangtk_id; 
		private Guid _tscd_id; 
		private string _ten_hanghoa; 
		private decimal _so_luong; 
		private DateTime? _ngay_tao; 
		private Guid _thue_id; 
		private string _ten_thue; 
		private decimal _ty_le; 
		private decimal _chiu_thue; 
		private decimal _doanh_so; 
		private decimal _doanh_so_nte; 
		private decimal _so_tien; 
		private decimal _so_tien_nte; 
		private string _ghi_chu; 
		private Guid _ct_tscd_id; 
		private Guid _ct_hanghoa_id; 
		private Guid _ct_banhang_id; 
		private string _ten_nhom_chiu_thue; 
		private decimal _nhom_chiu_thue; 
		private decimal _mua_ban; 
		private Guid _ctd_nx_id; 
		private Guid _donvi_id; 
		private Guid _ct_hoadon_id; 
		private Guid _cth_id; 
		private decimal _phan_he; 
		private string _ten_dvt; 
		private string _so_thu_tu; 
		private decimal _sap_xep; 
		private decimal _don_gia; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public CtThue()
		{
				_ct_thue_id =  new Guid(); 
				_loai_taikhoan =  String.Empty; 
				_taikhoan_id =  new Guid(); 
				_ma_taikhoan =  String.Empty; 
				_ctd_id =  new Guid(); 
				_ky_hieu_hd =  String.Empty; 
				_so_seri =  String.Empty; 
				_ngay_hoadon = DateTime.MaxValue; 
				_khang_id =  new Guid(); 
				_ten_khang =  String.Empty; 
				_mst =  String.Empty; 
				_hangtk_id =  new Guid(); 
				_tscd_id =  new Guid(); 
				_ten_hanghoa =  String.Empty; 
				_so_luong = 0; 
				_ngay_tao = DateTime.MaxValue; 
				_thue_id =  new Guid(); 
				_ten_thue =  String.Empty; 
				_ty_le = 0; 
				_chiu_thue = 0; 
				_doanh_so = 0; 
				_doanh_so_nte = 0; 
				_so_tien = 0; 
				_so_tien_nte = 0; 
				_ghi_chu =  String.Empty; 
				_ct_tscd_id =  new Guid(); 
				_ct_hanghoa_id =  new Guid(); 
				_ct_banhang_id =  new Guid(); 
				_ten_nhom_chiu_thue =  String.Empty; 
				_nhom_chiu_thue = 0; 
				_mua_ban = 0; 
				_ctd_nx_id =  new Guid(); 
				_donvi_id =  new Guid(); 
				_ct_hoadon_id =  new Guid(); 
				_cth_id =  new Guid(); 
				_phan_he = 0; 
				_ten_dvt =  String.Empty; 
				_so_thu_tu =  String.Empty; 
				_sap_xep = 0; 
				_don_gia = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
        public CtThue Clone()
        {
            return (CtThue)this.MemberwiseClone();
        }
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtThueId
		{
			get { return _ct_thue_id; }
			set { _isChanged |= (_ct_thue_id != value); _ct_thue_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string LoaiTaikhoan
		{
			get { return _loai_taikhoan; }
			set	
			{
				if ( value != null)
					if( value.Length > 1)
						throw new ArgumentOutOfRangeException("Invalid value for LoaiTaikhoan", value, value.ToString());
				
				_isChanged |= (_loai_taikhoan != value); _loai_taikhoan = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid TaikhoanId
		{
			get { return _taikhoan_id; }
			set { _isChanged |= (_taikhoan_id != value); _taikhoan_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaTaikhoan
		{
			get { return _ma_taikhoan; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for MaTaikhoan", value, value.ToString());
				
				_isChanged |= (_ma_taikhoan != value); _ma_taikhoan = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtdId
		{
			get { return _ctd_id; }
			set { _isChanged |= (_ctd_id != value); _ctd_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string KyHieuHd
		{
			get { return _ky_hieu_hd; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for KyHieuHd", value, value.ToString());
				
				_isChanged |= (_ky_hieu_hd != value); _ky_hieu_hd = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string SoSeri
		{
			get { return _so_seri; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for SoSeri", value, value.ToString());
				
				_isChanged |= (_so_seri != value); _so_seri = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  DateTime? NgayHoadon
		{
			get { return _ngay_hoadon; }
			set { _isChanged |= (_ngay_hoadon != value); _ngay_hoadon = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid KhangId
		{
			get { return _khang_id; }
			set { _isChanged |= (_khang_id != value); _khang_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenKhang
		{
			get { return _ten_khang; }
			set	
			{
				if ( value != null)
					if( value.Length > 256)
						throw new ArgumentOutOfRangeException("Invalid value for TenKhang", value, value.ToString());
				
				_isChanged |= (_ten_khang != value); _ten_khang = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Mst
		{
			get { return _mst; }
			set	
			{
				if ( value != null)
					if( value.Length > 64)
						throw new ArgumentOutOfRangeException("Invalid value for Mst", value, value.ToString());
				
				_isChanged |= (_mst != value); _mst = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid HangtkId
		{
			get { return _hangtk_id; }
			set { _isChanged |= (_hangtk_id != value); _hangtk_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid TscdId
		{
			get { return _tscd_id; }
			set { _isChanged |= (_tscd_id != value); _tscd_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenHanghoa
		{
			get { return _ten_hanghoa; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for TenHanghoa", value, value.ToString());
				
				_isChanged |= (_ten_hanghoa != value); _ten_hanghoa = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal SoLuong
		{
			get { return _so_luong; }
            set { _isChanged |= (_so_luong != value); _so_luong = Decimal.Round(value, 2); }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  DateTime? NgayTao
		{
			get { return _ngay_tao; }
			set { _isChanged |= (_ngay_tao != value); _ngay_tao = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid ThueId
		{
			get { return _thue_id; }
			set { _isChanged |= (_thue_id != value); _thue_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenThue
		{
			get { return _ten_thue; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for TenThue", value, value.ToString());
				
				_isChanged |= (_ten_thue != value); _ten_thue = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal TyLe
		{
			get { return _ty_le; }
            set { _isChanged |= (_ty_le != value); _ty_le = Decimal.Round(value, 2); }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal ChiuThue
		{
			get { return _chiu_thue; }
			set { _isChanged |= (_chiu_thue != value); _chiu_thue = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal DoanhSo
		{
			get { return _doanh_so; }
            set { _isChanged |= (_doanh_so != value); _doanh_so = Decimal.Round(value, 0); }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal DoanhSoNte
		{
			get { return _doanh_so_nte; }
            set { _isChanged |= (_doanh_so_nte != value); _doanh_so_nte = Decimal.Round(value, 2); }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal SoTien
		{
			get { return _so_tien; }
            set { _isChanged |= (_so_tien != value); _so_tien = Decimal.Round(value, 0); }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal SoTienNte
		{
			get { return _so_tien_nte; }
            set { _isChanged |= (_so_tien_nte != value); _so_tien_nte = Decimal.Round(value, 2); }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string GhiChu
		{
			get { return _ghi_chu; }
			set	
			{
				if ( value != null)
					if( value.Length > 256)
						throw new ArgumentOutOfRangeException("Invalid value for GhiChu", value, value.ToString());
				
				_isChanged |= (_ghi_chu != value); _ghi_chu = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtTscdId
		{
			get { return _ct_tscd_id; }
			set { _isChanged |= (_ct_tscd_id != value); _ct_tscd_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtHanghoaId
		{
			get { return _ct_hanghoa_id; }
			set { _isChanged |= (_ct_hanghoa_id != value); _ct_hanghoa_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtBanhangId
		{
			get { return _ct_banhang_id; }
			set { _isChanged |= (_ct_banhang_id != value); _ct_banhang_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenNhomChiuThue
		{
			get { return _ten_nhom_chiu_thue; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for TenNhomChiuThue", value, value.ToString());
				
				_isChanged |= (_ten_nhom_chiu_thue != value); _ten_nhom_chiu_thue = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal NhomChiuThue
		{
			get { return _nhom_chiu_thue; }
			set { _isChanged |= (_nhom_chiu_thue != value); _nhom_chiu_thue = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal MuaBan
		{
			get { return _mua_ban; }
			set { _isChanged |= (_mua_ban != value); _mua_ban = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtdNxId
		{
			get { return _ctd_nx_id; }
			set { _isChanged |= (_ctd_nx_id != value); _ctd_nx_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid DonviId
		{
			get { return _donvi_id; }
			set { _isChanged |= (_donvi_id != value); _donvi_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CtHoadonId
		{
			get { return _ct_hoadon_id; }
			set { _isChanged |= (_ct_hoadon_id != value); _ct_hoadon_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid CthId
		{
			get { return _cth_id; }
			set { _isChanged |= (_cth_id != value); _cth_id = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal PhanHe
		{
			get { return _phan_he; }
			set { _isChanged |= (_phan_he != value); _phan_he = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenDvt
		{
			get { return _ten_dvt; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for TenDvt", value, value.ToString());
				
				_isChanged |= (_ten_dvt != value); _ten_dvt = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string SoThuTu
		{
			get { return _so_thu_tu; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for SoThuTu", value, value.ToString());
				
				_isChanged |= (_so_thu_tu != value); _so_thu_tu = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal SapXep
		{
			get { return _sap_xep; }
			set { _isChanged |= (_sap_xep != value); _sap_xep = value; }
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  decimal DonGia
		{
			get { return _don_gia; }
            set { _isChanged |= (_don_gia != value); _don_gia = Decimal.Round(value, 0); }
			}
			
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		
		#endregion
		
		
		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			CtThue castObj = (CtThue)obj; 
			return ( castObj != null ) &&
				( this._ct_thue_id == castObj.CtThueId);
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _ct_thue_id.GetHashCode();
			return hash; 
		}
		#endregion
		
	}
}
