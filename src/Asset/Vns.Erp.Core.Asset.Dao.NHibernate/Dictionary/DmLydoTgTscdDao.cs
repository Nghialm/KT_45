/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
//using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.Erp.Core.Asset.Domain;
using Vns.Erp.Core.Asset.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
namespace Vns.Erp.Core.Asset.Dao.NHibernate
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
    /// </summary>
    [Serializable]
    public sealed class DmLydoTgTscdDao : GenericDao<DmLydoTgTscd, Guid>, IDmLydoTgTscdDao
    {
        #region IDao
        DmLydoTgTscd IDao<DmLydoTgTscd, Guid>.Merge(DmLydoTgTscd entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.Merge(entity);

            return entity;
        }

        DmLydoTgTscd IDao<DmLydoTgTscd, Guid>.Save(DmLydoTgTscd entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.Save(entity);

            return entity;
        }

        DmLydoTgTscd IDao<DmLydoTgTscd, Guid>.SaveOrUpdate(DmLydoTgTscd entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.SaveOrUpdate(entity);

            return entity;
        }
        #endregion

        public IList<DmLydoTgTscd> GetAllByDonviID(Guid DonviId)
        {
            ArrayList props = new ArrayList();
            ArrayList values = new ArrayList();
            props.Add("DonviId");
            values.Add(DonviId);
            return List(-1, -1, props, values, null);
        }
    }
}
