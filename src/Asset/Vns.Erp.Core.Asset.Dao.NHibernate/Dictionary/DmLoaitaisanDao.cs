/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
//using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.Erp.Core.Asset.Domain;
using Vns.Erp.Core.Asset.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
namespace Vns.Erp.Core.Asset.Dao.NHibernate
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
    /// </summary>
    [Serializable]
    public sealed class DmLoaitaisanDao : GenericDao<DmLoaitaisan, Guid>, IDmLoaitaisanDao
    {
        #region IDao
        DmLoaitaisan IDao<DmLoaitaisan, Guid>.Merge(DmLoaitaisan entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.Merge(entity);

            return entity;
        }

        DmLoaitaisan IDao<DmLoaitaisan, Guid>.Save(DmLoaitaisan entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.Save(entity);

            return entity;
        }

        DmLoaitaisan IDao<DmLoaitaisan, Guid>.SaveOrUpdate(DmLoaitaisan entity)
        {
            if (VnsCheck.IsNullGuid(entity.Id)) entity.Id = Guid.NewGuid();
            HibernateTemplate.SaveOrUpdate(entity);

            return entity;
        }
        #endregion

        public IList<DmLoaitaisan> GetByKyHieu(string KyHieu)
        {
            string sql = "from DmLoaitaisan a where a.KyHieu like (:KyHieu)";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("KyHieu", KyHieu);
            return q.List<DmLoaitaisan>();
        }
    }
}
